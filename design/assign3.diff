diff --git a/Gemfile b/Gemfile
index 57e82e8..8302a5d 100644
--- a/Gemfile
+++ b/Gemfile
@@ -71,4 +71,6 @@ gem 'bootstrap', '~> 4.3.1'
 
 gem 'kaminari'
 
+gem 'devise'
+
 # gem 'bootstrap-multiselect_rails', '~> 0.9.4'
\ No newline at end of file
diff --git a/Gemfile.lock b/Gemfile.lock
index 398a56d..e334436 100644
--- a/Gemfile.lock
+++ b/Gemfile.lock
@@ -51,6 +51,7 @@ GEM
       rails (>= 4.0, < 5.3)
     autoprefixer-rails (9.6.5)
       execjs
+    bcrypt (3.1.13)
     bindex (0.8.1)
     bootsnap (1.4.5)
       msgpack (~> 1.0)
@@ -58,8 +59,6 @@ GEM
       autoprefixer-rails (>= 9.1.0)
       popper_js (>= 1.14.3, < 2)
       sassc-rails (>= 2.0.0)
-    bootstrap-multiselect-rails (0.9.9)
-      rails (>= 4.0.0)
     builder (3.2.3)
     byebug (11.0.1)
     capybara (3.29.0)
@@ -84,6 +83,12 @@ GEM
     coffee-script-source (1.12.2)
     concurrent-ruby (1.1.5)
     crass (1.0.4)
+    devise (4.7.1)
+      bcrypt (~> 3.0)
+      orm_adapter (~> 0.1)
+      railties (>= 4.1.0)
+      responders
+      warden (~> 1.2.3)
     erubi (1.9.0)
     execjs (2.7.0)
     ffi (1.11.1)
@@ -132,6 +137,7 @@ GEM
     nio4r (2.5.2)
     nokogiri (1.10.4)
       mini_portile2 (~> 2.4.0)
+    orm_adapter (0.5.0)
     popper_js (1.14.5)
     public_suffix (4.0.1)
     puma (3.12.1)
@@ -167,6 +173,9 @@ GEM
     rb-inotify (0.10.0)
       ffi (~> 1.0)
     regexp_parser (1.6.0)
+    responders (3.0.0)
+      actionpack (>= 5.0)
+      railties (>= 5.0)
     ruby_dep (1.5.0)
     rubyzip (2.0.0)
     sass (3.7.4)
@@ -215,6 +224,8 @@ GEM
       thread_safe (~> 0.1)
     uglifier (4.2.0)
       execjs (>= 0.3.0, < 3)
+    warden (1.2.8)
+      rack (>= 2.0.6)
     web-console (3.7.0)
       actionview (>= 5.0)
       activemodel (>= 5.0)
@@ -233,11 +244,11 @@ DEPENDENCIES
   autocomplete_rails
   bootsnap (>= 1.1.0)
   bootstrap (~> 4.3.1)
-  bootstrap-multiselect-rails
   byebug
   capybara (>= 2.15)
   chromedriver-helper
   coffee-rails (~> 4.2)
+  devise
   jbuilder (~> 2.5)
   jquery-rails
   jquery-ui-rails
diff --git a/app/controllers/application_controller.rb b/app/controllers/application_controller.rb
index 09705d1..bb8cdb9 100644
--- a/app/controllers/application_controller.rb
+++ b/app/controllers/application_controller.rb
@@ -1,2 +1,3 @@
 class ApplicationController < ActionController::Base
+  # before_action :authenticate_user!
 end
diff --git a/app/controllers/cars_controller.rb b/app/controllers/cars_controller.rb
index 68493b0..ea9b3e3 100644
--- a/app/controllers/cars_controller.rb
+++ b/app/controllers/cars_controller.rb
@@ -1,12 +1,23 @@
 class CarsController < ApplicationController
   before_action :set_car, only: [:show, :edit, :update, :destroy]
+  before_action :authenticate_user!, only: [:create, :edit, :update, :destroy]
 
   autocomplete :car, :model, full_search: true
 
   # GET /cars
   # GET /cars.json
   def index
-    @cars = Car.all.order(:make_id, :model).page params[:page]
+    if params[:order] == 'vin' || params[:order] == 'model'
+      @cars = Car.all.order(params[:order], :model).page params[:page]
+    else
+      @cars = Car.select('cars.*, makes.name').joins(:make).order('makes.name').page params[:page]
+    end
+    # @cars = Car.select('cars.*, ')
+  end
+
+  def parse_order_param
+    return params[:order] if params[:order] == 'vin' || params[:order] == 'model'
+
   end
 
   # GET /cars/1
@@ -48,6 +59,8 @@ class CarsController < ApplicationController
   # PATCH/PUT /cars/1
   # PATCH/PUT /cars/1.json
   def update
+    @makes = Make.all
+    @parts = Part.all
     respond_to do |format|
       if @car.update(car_params)
         format.html { redirect_to @car, notice: 'Car was successfully updated.' }
diff --git a/app/controllers/makes_controller.rb b/app/controllers/makes_controller.rb
index 9dfb4b2..153277a 100644
--- a/app/controllers/makes_controller.rb
+++ b/app/controllers/makes_controller.rb
@@ -1,5 +1,7 @@
 class MakesController < ApplicationController
   before_action :set_make, only: [:show, :edit, :update, :destroy]
+  before_action :authenticate_user!, only: [:create, :edit, :update, :destroy]
+
 
   autocomplete :make, :name, full_search: true
 
diff --git a/app/controllers/parts_controller.rb b/app/controllers/parts_controller.rb
index 4133966..7aad5aa 100644
--- a/app/controllers/parts_controller.rb
+++ b/app/controllers/parts_controller.rb
@@ -1,5 +1,7 @@
 class PartsController < ApplicationController
   before_action :set_part, only: [:show, :edit, :update, :destroy]
+  before_action :authenticate_user!, only: [:create, :edit, :update, :destroy]
+
 
   autocomplete :part, :name, full_search: true
 
diff --git a/app/helpers/application_helper.rb b/app/helpers/application_helper.rb
index cb49393..9339dec 100644
--- a/app/helpers/application_helper.rb
+++ b/app/helpers/application_helper.rb
@@ -2,10 +2,19 @@ module ApplicationHelper
 
   # https://gist.github.com/mynameispj/5692162
   def nav_link_class(test_path)
+    if url_for(request.path) == url_for(test_path) || (test_path == cars_path && request.path == '/')
+      'nav-item active'
+    else
+      'nav-item'
+    end
+  end
 
-    return 'nav-item active' if url_for(request.path) == url_for(test_path)
-
-    'nav-item'
+  def right_nav_class(test_path)
+    if url_for(request.path) == url_for(test_path)
+      'btn btn-primary'
+    else
+      'btn btn-outline-primary'
+    end
   end
 
 end
diff --git a/app/models/car.rb b/app/models/car.rb
index a6a4590..2c845be 100644
--- a/app/models/car.rb
+++ b/app/models/car.rb
@@ -28,7 +28,8 @@ class Car < ApplicationRecord
                "%#{params[:part]}%",
                "%#{params[:make]}%",
                "%#{params[:vin]}%",
-               "%#{params[:model]}%").uniq
+               "%#{params[:model]}%")
+        .order('makes.name').uniq
   end
 
   def Car.query(params={})
diff --git a/app/models/user.rb b/app/models/user.rb
new file mode 100644
index 0000000..4756799
--- /dev/null
+++ b/app/models/user.rb
@@ -0,0 +1,6 @@
+class User < ApplicationRecord
+  # Include default devise modules. Others available are:
+  # :confirmable, :lockable, :timeoutable, :trackable and :omniauthable
+  devise :database_authenticatable, :registerable,
+         :recoverable, :rememberable, :validatable
+end
diff --git a/app/views/about/creator.html.erb b/app/views/about/creator.html.erb
index f3606c5..0b050fa 100644
--- a/app/views/about/creator.html.erb
+++ b/app/views/about/creator.html.erb
@@ -5,6 +5,9 @@
     This website was created for my Web Applications class. See the various specifications
     <a href=<%= about_assignments_path %>>here</a>.
   </p>
+  <p>
+    <img src="https://api.travis-ci.org/Newms226/assignment-one-Newms226.svg?branch=master">
+  </p>
   <hr class="my-4">
   <h3>Learn more about me</h3>
   <button type="button" class="btn btn-success btn-lg"><a href="resume">Resume</a></button>
@@ -17,6 +20,9 @@
   <a class="btn btn-info btn-lg" href="https://semantic-ui.com/" role="button">Semantic UI</a>
   <a class="btn btn-danger btn-lg" href="https://github.com/tomichj/autocomplete_rails" role="button">Autocomplete Rails</a>
   <a class="btn btn-info btn-lg" href="https://Travis-ci.org" role="button">TravisCI</a>
+  <a class="btn btn-danger btn-lg" href="https://github.com/kaminari/kaminari" role="button">Kaminari Pagination</a>
+  <a class="btn btn-info btn-lg" href="https://github.com/plataformatec/devise" role="button">Devise</a>
+
 
   <hr class="my-4">
   <h3>Data imported from:</h3>
diff --git a/app/views/cars/_form.html.erb b/app/views/cars/_form.html.erb
index 37ba29c..46a174b 100644
--- a/app/views/cars/_form.html.erb
+++ b/app/views/cars/_form.html.erb
@@ -1,9 +1,8 @@
 
-<%= form_with(model: car, local: true) do |form| %>
+<%= form_with(model: car, local: true, class: "ui large form segment") do |form| %>
   <% if car.errors.any? %>
     <div id="error_explanation">
       <h2><%= pluralize(car.errors.count, "error") %> prohibited this car from being saved:</h2>
-
       <ul>
       <% car.errors.full_messages.each do |message| %>
         <li><%= message %></li>
@@ -12,89 +11,42 @@
     </div>
   <% end %>
 
-  <div class="field">
+  <div class="form-group">
     <%= form.label :make_id %>
 <!--    <select -->
-    <%= form.collection_select :make_id, @makes, :id, :name, class: "ui search dropdown" %>
+    <%= form.collection_select :make_id, @makes, :id, :name, class: 'form-control' %>
   </div>
 
-  <div class="field">
+  <div class="form-group">
     <%= form.label :model %>
     <%= form.text_field :model %>
   </div>
 
-  <div class="field">
+  <div class="form-group">
     <%= form.label :vin %>
     <%= form.number_field :vin %>
   </div>
 
-  <%= form.label :part_id, 'Select multiple parts with command:' %>
-  <div class="field">
-    <%= form.collection_select :part_ids, @parts.order(:name), :id, :name, {}, :multiple => 'true', :class => 'part_ids' %>
+  <div class="form-group">
+    <%= form.label :part_id, 'Parts: (Select multiple parts with command)' %>
+    <%= form.collection_select :part_ids, @parts.order(:name), :id, :name, {}, :multiple => 'true' %>
   </div>
 
-<!--  <div class="field">-->
-    <%#= form.label :part_id %>
-<!--    <ul class="list-group">-->
-      <%#= form.collection_check_boxes :part_ids, @parts.order(:name), :id, :name do |cb| %>
-<!--        <li class="list-group-item"><%#= cb.check_box %> <span><%#= Part.find_by_id(cb.value).name %></span></li>-->
-      <%# end %>
-<!--    </ul>-->
-<!--  </div>-->
-
-<!--  <select id="example-getting-started" multiple="multiple">-->
-<!--    <option value="1">Cheese</option>-->
-<!--    <option value="2">Tomatoes</option>-->
-<!--    <option value="3">Mozzarella</option>-->
-<!--    <option value="4">Mushrooms</option>-->
-<!--    <option value="5">Pepperoni</option>-->
-<!--    <option value="6">Onions</option>-->
-<!--  </select>-->
-
-<!--  <select id="part_select" multiple="multiple">-->
-    <%# @parts.order(:name).each do |part| %>
-<!--      <input data-value="<%#= part.id %>"><%#= part.name %></input>-->
-    <%# end %>
-<!--  </select>-->
-
-<!--  <div class="row">-->
-<!--    <div class="col-md-12">-->
-
-<!--      <select class="mdb-select colorful-select dropdown-primary md-form" multiple searchable="Search here..">-->
-<!--        <option value="" disabled selected>Choose your country</option>-->
-<!--        <option value="1">USA</option>-->
-<!--        <option value="2">Germany</option>-->
-<!--        <option value="3">France</option>-->
-<!--        <option value="4">Poland</option>-->
-<!--        <option value="5">Japan</option>-->
-<!--      </select>-->
-<!--      <label class="mdb-main-label">Label example</label>-->
-<!--      <button class="btn-save btn btn-primary btn-sm">Save</button>-->
-
-<!--    </div>-->
-<!--  </div>-->
+  <div class="actions">
+    <%= form.submit class: 'btn btn-primary' %>
+  </div>
+<% end %>
 
 <!--  <div class="form-group">-->
-<!--    <label for="exampleFormControlSelect2">Example multiple select</label>-->
-<!--    <select multiple class="form-control" id="exampleFormControlSelect2">-->
-      <%# @parts.each do |part| %>
-        <%# options_from_collection_for_select(part, :id, :name) %>
-<!--        <option data-value="<%#= part.id %>"><%#= part.name %></option>-->
+    <%#= form.label :part_id, 'Parts: (Select multiple parts with command)' %>
+<!--    <select multiple class="form-control" name="parts_id">-->
+      <%# Part.all.order(:name).each do |part| %>
+<!--        <option value="<%#= part.id %>" name="parts_id"><%#= part.name %></option>-->
       <%# end %>
 <!--    </select>-->
 <!--  </div>-->
 
-<!--  <div class="field">-->
-    <%#= form.label :part_id %>
-<!--    <ul>-->
-      <%#= form.collection_check_boxes(:part_ids, @parts, :id, :name) do |cb| %>
-<!--        <li><%#= cb.check_box %> <%#= cb.name %></li>-->
-      <%# end %>
-<!--    </ul>-->
 
-<!--  </div>-->
 
-  <div class="actions">
-    <%= form.submit %>
-  </div>
-<% end %>
+
+
diff --git a/app/views/cars/index.html.erb b/app/views/cars/index.html.erb
index c29c0cf..4f917df 100644
--- a/app/views/cars/index.html.erb
+++ b/app/views/cars/index.html.erb
@@ -1,4 +1,4 @@
-<p id="notice"><%= notice %></p>
+<!--<p id="notice"><%#= notice %></p>-->
 
 <h1>Cars || <span><%= link_to 'New Car', new_car_path %></span></h1>
 
@@ -25,11 +25,17 @@
   <table class="table table-hover">
     <thead>
       <tr>
-        <th scope="col">Make</th>
-        <th scope="col">Model</th>
-        <th scope="col">Vin</th>
+        <th scope="col"><%= link_to 'Make', cars_url(order: 'make')%></th>
+<!--        <th scope="col"><%#= link_to 'Model', controller: controller_name, action: action_name, order: 'model' %></th>-->
+<!--        <th scope="col"><%#= link_to 'Model', url_for(params.merge!(order: 'model').permit(:order)) %></th>-->
+<!--        <th scope="col"><%#= link_to 'Model', request.url + '&order=model'%></th>-->
+        <th scope="col"><%= link_to 'Model', cars_url(order: 'model')%></th>
+        <th scope="col"><%= link_to 'VIN', cars_url(order: 'vin')%></th>
         <th scope="col">Part</th>
-        <th colspan="3"></th>
+        <th colspan="2"></th>
+        <% if user_signed_in? %>
+          <th colspan="2"></th>
+        <% end %>
       </tr>
     </thead>
 
@@ -41,9 +47,11 @@
           <td><%= car.vin %></td>
               <%  l = car.parts.map {|p| p.name} %>
           <td><%= l.sort.join(", ") %></td>
-          <td><%= link_to 'Show', car %></td>
-          <td><%= link_to 'Edit', edit_car_path(car) %></td>
-          <td><%= link_to 'Destroy', car, method: :delete, data: { confirm: 'Are you sure?' } %></td>
+          <td><%= link_to 'View', car_path(car) %></td>
+          <% if user_signed_in? %>
+            <td><%= link_to 'Edit', edit_car_path(car) %></td>
+            <td><%= link_to 'Destroy', car, method: :delete, data: { confirm: 'Are you sure?' } %></td>
+          <% end %>
         </tr>
       <% end %>
     </tbody>
diff --git a/app/views/cars/show.html.erb b/app/views/cars/show.html.erb
index 590b051..56ba515 100644
--- a/app/views/cars/show.html.erb
+++ b/app/views/cars/show.html.erb
@@ -1,4 +1,4 @@
-<p id="notice"><%= notice %></p>
+<!--<p id="notice"><%#= notice %></p>-->
 
 <p>
   <strong>Make:</strong>
diff --git a/app/views/devise/confirmations/new.html.erb b/app/views/devise/confirmations/new.html.erb
new file mode 100644
index 0000000..b12dd0c
--- /dev/null
+++ b/app/views/devise/confirmations/new.html.erb
@@ -0,0 +1,16 @@
+<h2>Resend confirmation instructions</h2>
+
+<%= form_for(resource, as: resource_name, url: confirmation_path(resource_name), html: { method: :post }) do |f| %>
+  <%= render "devise/shared/error_messages", resource: resource %>
+
+  <div class="field">
+    <%= f.label :email %><br />
+    <%= f.email_field :email, autofocus: true, autocomplete: "email", value: (resource.pending_reconfirmation? ? resource.unconfirmed_email : resource.email) %>
+  </div>
+
+  <div class="actions">
+    <%= f.submit "Resend confirmation instructions" %>
+  </div>
+<% end %>
+
+<%= render "devise/shared/links" %>
diff --git a/app/views/devise/mailer/confirmation_instructions.html.erb b/app/views/devise/mailer/confirmation_instructions.html.erb
new file mode 100644
index 0000000..dc55f64
--- /dev/null
+++ b/app/views/devise/mailer/confirmation_instructions.html.erb
@@ -0,0 +1,5 @@
+<p>Welcome <%= @email %>!</p>
+
+<p>You can confirm your account email through the link below:</p>
+
+<p><%= link_to 'Confirm my account', confirmation_url(@resource, confirmation_token: @token) %></p>
diff --git a/app/views/devise/mailer/email_changed.html.erb b/app/views/devise/mailer/email_changed.html.erb
new file mode 100644
index 0000000..32f4ba8
--- /dev/null
+++ b/app/views/devise/mailer/email_changed.html.erb
@@ -0,0 +1,7 @@
+<p>Hello <%= @email %>!</p>
+
+<% if @resource.try(:unconfirmed_email?) %>
+  <p>We're contacting you to notify you that your email is being changed to <%= @resource.unconfirmed_email %>.</p>
+<% else %>
+  <p>We're contacting you to notify you that your email has been changed to <%= @resource.email %>.</p>
+<% end %>
diff --git a/app/views/devise/mailer/password_change.html.erb b/app/views/devise/mailer/password_change.html.erb
new file mode 100644
index 0000000..b41daf4
--- /dev/null
+++ b/app/views/devise/mailer/password_change.html.erb
@@ -0,0 +1,3 @@
+<p>Hello <%= @resource.email %>!</p>
+
+<p>We're contacting you to notify you that your password has been changed.</p>
diff --git a/app/views/devise/mailer/reset_password_instructions.html.erb b/app/views/devise/mailer/reset_password_instructions.html.erb
new file mode 100644
index 0000000..f667dc1
--- /dev/null
+++ b/app/views/devise/mailer/reset_password_instructions.html.erb
@@ -0,0 +1,8 @@
+<p>Hello <%= @resource.email %>!</p>
+
+<p>Someone has requested a link to change your password. You can do this through the link below.</p>
+
+<p><%= link_to 'Change my password', edit_password_url(@resource, reset_password_token: @token) %></p>
+
+<p>If you didn't request this, please ignore this email.</p>
+<p>Your password won't change until you access the link above and create a new one.</p>
diff --git a/app/views/devise/mailer/unlock_instructions.html.erb b/app/views/devise/mailer/unlock_instructions.html.erb
new file mode 100644
index 0000000..41e148b
--- /dev/null
+++ b/app/views/devise/mailer/unlock_instructions.html.erb
@@ -0,0 +1,7 @@
+<p>Hello <%= @resource.email %>!</p>
+
+<p>Your account has been locked due to an excessive number of unsuccessful sign in attempts.</p>
+
+<p>Click the link below to unlock your account:</p>
+
+<p><%= link_to 'Unlock my account', unlock_url(@resource, unlock_token: @token) %></p>
diff --git a/app/views/devise/passwords/edit.html.erb b/app/views/devise/passwords/edit.html.erb
new file mode 100644
index 0000000..5fbb9ff
--- /dev/null
+++ b/app/views/devise/passwords/edit.html.erb
@@ -0,0 +1,25 @@
+<h2>Change your password</h2>
+
+<%= form_for(resource, as: resource_name, url: password_path(resource_name), html: { method: :put }) do |f| %>
+  <%= render "devise/shared/error_messages", resource: resource %>
+  <%= f.hidden_field :reset_password_token %>
+
+  <div class="field">
+    <%= f.label :password, "New password" %><br />
+    <% if @minimum_password_length %>
+      <em>(<%= @minimum_password_length %> characters minimum)</em><br />
+    <% end %>
+    <%= f.password_field :password, autofocus: true, autocomplete: "new-password" %>
+  </div>
+
+  <div class="field">
+    <%= f.label :password_confirmation, "Confirm new password" %><br />
+    <%= f.password_field :password_confirmation, autocomplete: "new-password" %>
+  </div>
+
+  <div class="actions">
+    <%= f.submit "Change my password" %>
+  </div>
+<% end %>
+
+<%= render "devise/shared/links" %>
diff --git a/app/views/devise/passwords/new.html.erb b/app/views/devise/passwords/new.html.erb
new file mode 100644
index 0000000..9b486b8
--- /dev/null
+++ b/app/views/devise/passwords/new.html.erb
@@ -0,0 +1,16 @@
+<h2>Forgot your password?</h2>
+
+<%= form_for(resource, as: resource_name, url: password_path(resource_name), html: { method: :post }) do |f| %>
+  <%= render "devise/shared/error_messages", resource: resource %>
+
+  <div class="field">
+    <%= f.label :email %><br />
+    <%= f.email_field :email, autofocus: true, autocomplete: "email" %>
+  </div>
+
+  <div class="actions">
+    <%= f.submit "Send me reset password instructions" %>
+  </div>
+<% end %>
+
+<%= render "devise/shared/links" %>
diff --git a/app/views/devise/registrations/edit.html.erb b/app/views/devise/registrations/edit.html.erb
new file mode 100644
index 0000000..38d95b8
--- /dev/null
+++ b/app/views/devise/registrations/edit.html.erb
@@ -0,0 +1,43 @@
+<h2>Edit <%= resource_name.to_s.humanize %></h2>
+
+<%= form_for(resource, as: resource_name, url: registration_path(resource_name), html: { method: :put }) do |f| %>
+  <%= render "devise/shared/error_messages", resource: resource %>
+
+  <div class="field">
+    <%= f.label :email %><br />
+    <%= f.email_field :email, autofocus: true, autocomplete: "email" %>
+  </div>
+
+  <% if devise_mapping.confirmable? && resource.pending_reconfirmation? %>
+    <div>Currently waiting confirmation for: <%= resource.unconfirmed_email %></div>
+  <% end %>
+
+  <div class="field">
+    <%= f.label :password %> <i>(leave blank if you don't want to change it)</i><br />
+    <%= f.password_field :password, autocomplete: "new-password" %>
+    <% if @minimum_password_length %>
+      <br />
+      <em><%= @minimum_password_length %> characters minimum</em>
+    <% end %>
+  </div>
+
+  <div class="field">
+    <%= f.label :password_confirmation %><br />
+    <%= f.password_field :password_confirmation, autocomplete: "new-password" %>
+  </div>
+
+  <div class="field">
+    <%= f.label :current_password %> <i>(we need your current password to confirm your changes)</i><br />
+    <%= f.password_field :current_password, autocomplete: "current-password" %>
+  </div>
+
+  <div class="actions">
+    <%= f.submit "Update" %>
+  </div>
+<% end %>
+
+<h3>Cancel my account</h3>
+
+<p>Unhappy? <%= button_to "Cancel my account", registration_path(resource_name), data: { confirm: "Are you sure?" }, method: :delete %></p>
+
+<%= link_to "Back", :back %>
diff --git a/app/views/devise/registrations/new.html.erb b/app/views/devise/registrations/new.html.erb
new file mode 100644
index 0000000..6cd8f73
--- /dev/null
+++ b/app/views/devise/registrations/new.html.erb
@@ -0,0 +1,29 @@
+<h2>Sign up</h2>
+
+<%= form_for(resource, as: resource_name, url: registration_path(resource_name)) do |f| %>
+  <%= render "devise/shared/error_messages", resource: resource %>
+
+  <div class="form-group">
+    <%= f.label :email %><br />
+    <%= f.email_field :email, autofocus: true, autocomplete: "email", class:"form-control" %>
+  </div>
+
+  <div class="form-group">
+    <%= f.label :password %>
+    <% if @minimum_password_length %>
+    <em>(<%= @minimum_password_length %> characters minimum)</em>
+    <% end %><br />
+    <%= f.password_field :password, autocomplete: "new-password", class: "form-control"%>
+  </div>
+
+  <div class="form-group">
+    <%= f.label :password_confirmation %><br />
+    <%= f.password_field :password_confirmation, autocomplete: "new-password", class: "form-control" %>
+  </div>
+
+  <div class="actions">
+    <%= f.submit "Sign up", class: "btn btn-primary" %>
+  </div>
+<% end %>
+
+<%= render "devise/shared/links" %>
diff --git a/app/views/devise/sessions/new.html.erb b/app/views/devise/sessions/new.html.erb
new file mode 100644
index 0000000..8e7d1b6
--- /dev/null
+++ b/app/views/devise/sessions/new.html.erb
@@ -0,0 +1,26 @@
+<h2>Log in</h2>
+
+<%= form_for(resource, as: resource_name, url: session_path(resource_name)) do |f| %>
+  <div class="form-group">
+    <%= f.label :email %><br />
+    <%= f.email_field :email, autofocus: true, autocomplete: "email", class: "form-control" %>
+  </div>
+
+  <div class="form-group">
+    <%= f.label :password %><br />
+    <%= f.password_field :password, autocomplete: "current-password", class: "form-control" %>
+  </div>
+
+  <% if devise_mapping.rememberable? %>
+    <div class="field">
+      <%= f.check_box :remember_me %>
+      <%= f.label :remember_me %>
+    </div>
+  <% end %>
+
+  <div class="actions">
+    <%= f.submit "Log in", class: "btn btn-primary" %>
+  </div>
+<% end %>
+
+<%= render "devise/shared/links" %>
diff --git a/app/views/devise/shared/_error_messages.html.erb b/app/views/devise/shared/_error_messages.html.erb
new file mode 100644
index 0000000..ba7ab88
--- /dev/null
+++ b/app/views/devise/shared/_error_messages.html.erb
@@ -0,0 +1,15 @@
+<% if resource.errors.any? %>
+  <div id="error_explanation">
+    <h2>
+      <%= I18n.t("errors.messages.not_saved",
+                 count: resource.errors.count,
+                 resource: resource.class.model_name.human.downcase)
+       %>
+    </h2>
+    <ul>
+      <% resource.errors.full_messages.each do |message| %>
+        <li><%= message %></li>
+      <% end %>
+    </ul>
+  </div>
+<% end %>
diff --git a/app/views/devise/shared/_links.html.erb b/app/views/devise/shared/_links.html.erb
new file mode 100644
index 0000000..084af70
--- /dev/null
+++ b/app/views/devise/shared/_links.html.erb
@@ -0,0 +1,25 @@
+<%- if controller_name != 'sessions' %>
+  <%= link_to "Log in", new_session_path(resource_name) %><br />
+<% end %>
+
+<%- if devise_mapping.registerable? && controller_name != 'registrations' %>
+  <%= link_to "Sign up", new_registration_path(resource_name) %><br />
+<% end %>
+
+<%- if devise_mapping.recoverable? && controller_name != 'passwords' && controller_name != 'registrations' %>
+  <%= link_to "Forgot your password?", new_password_path(resource_name) %><br />
+<% end %>
+
+<%- if devise_mapping.confirmable? && controller_name != 'confirmations' %>
+  <%= link_to "Didn't receive confirmation instructions?", new_confirmation_path(resource_name) %><br />
+<% end %>
+
+<%- if devise_mapping.lockable? && resource_class.unlock_strategy_enabled?(:email) && controller_name != 'unlocks' %>
+  <%= link_to "Didn't receive unlock instructions?", new_unlock_path(resource_name) %><br />
+<% end %>
+
+<%- if devise_mapping.omniauthable? %>
+  <%- resource_class.omniauth_providers.each do |provider| %>
+    <%= link_to "Sign in with #{OmniAuth::Utils.camelize(provider)}", omniauth_authorize_path(resource_name, provider) %><br />
+  <% end %>
+<% end %>
diff --git a/app/views/devise/unlocks/new.html.erb b/app/views/devise/unlocks/new.html.erb
new file mode 100644
index 0000000..ffc34de
--- /dev/null
+++ b/app/views/devise/unlocks/new.html.erb
@@ -0,0 +1,16 @@
+<h2>Resend unlock instructions</h2>
+
+<%= form_for(resource, as: resource_name, url: unlock_path(resource_name), html: { method: :post }) do |f| %>
+  <%= render "devise/shared/error_messages", resource: resource %>
+
+  <div class="field">
+    <%= f.label :email %><br />
+    <%= f.email_field :email, autofocus: true, autocomplete: "email" %>
+  </div>
+
+  <div class="actions">
+    <%= f.submit "Resend unlock instructions" %>
+  </div>
+<% end %>
+
+<%= render "devise/shared/links" %>
diff --git a/app/views/layouts/application.html.erb b/app/views/layouts/application.html.erb
index 972726b..bfb9765 100644
--- a/app/views/layouts/application.html.erb
+++ b/app/views/layouts/application.html.erb
@@ -10,7 +10,7 @@
   </head>
 
   <body>
-    <nav class="navbar navbar-expand-sm sticky-top navbar-light bg-light">
+  <nav class="navbar navbar-expand-sm sticky-top navbar-light bg-light">
       <a class="navbar-brand" href="<%= root_path %>">Car Depot</a>
       <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
         <span class="navbar-toggler-icon"></span>
@@ -29,11 +29,33 @@
           </li>
         </ul>
         <form class="form-inline my-2 my-lg-0">
-          <button type="button" class="btn btn-outline-primary"><a href="<%= about_creator_path %>">About Me</a></button>
+          <button type="button" class="<%= right_nav_class(about_creator_path) %>">
+            <a href="<%= about_creator_path %>">About Me</a>
+          </button>
         </form>
         <form class="form-inline my-2 my-lg-0">
-          <button type="button" class="btn btn-outline-primary"><a href="<%= about_assignments_path %>">Assignments</a></button>
+          <button type="button" class="<%= right_nav_class(about_assignments_path) %>">
+            <a href="<%= about_assignments_path %>">Assignments</a>
+          </button>
         </form>
+        <% if user_signed_in? %>
+          <form class="form-inline my-2 my-lg-0">
+            <button type="button" class="<%= right_nav_class(destroy_user_session_path) %>">
+              <%= link_to 'Log Out', destroy_user_session_path, method: :delete %>
+            </button>
+          </form>
+        <% else %>
+          <form class="form-inline my-2 my-lg-0">
+            <button type="button" class="<%= right_nav_class(new_user_session_path) %>">
+              <%= link_to 'Sign In', new_user_session_url, method: :get %>
+            </button>
+          </form>
+          <form class="form-inline my-2 my-lg-0">
+            <button type="button" class="<%= right_nav_class(new_user_registration_path) %>">
+              <%= link_to 'Sign Up', new_user_registration_url, method: :get %>
+            </button>
+          </form>
+        <% end %>
       </div>
 
     </nav>
@@ -53,14 +75,15 @@
 <!--    </div>-->
 
     <div class="ui container center">
+      <% if notice %>
+        <p class="alert alert-success" role="alert"><%= notice %></p>
+      <% end %>
+      <% if alert %>
+        <p class="alert alert-danger" role="alert"><%= alert %></p>
+      <% end %>
       <div>
         <%= yield %>
       </div>
-<!--      <div class="ui buttons">-->
-        <%#= link_to 'Cars', cars_path, class: "ui button"  %>
-        <%#= link_to 'Parts', parts_path, class: "ui button"  %>
-        <%#= link_to 'Makes', makes_path, class: "ui button" %>
-<!--      </div>-->
     </div>
   </body>
 </html>
diff --git a/app/views/makes/_form.html.erb b/app/views/makes/_form.html.erb
index de13d04..7bb7578 100644
--- a/app/views/makes/_form.html.erb
+++ b/app/views/makes/_form.html.erb
@@ -1,4 +1,4 @@
-<%= form_with(model: make, local: true) do |form| %>
+<%= form_with(model: make, local: true, class: "ui large form segment") do |form| %>
   <% if make.errors.any? %>
     <div id="error_explanation">
       <h2><%= pluralize(make.errors.count, "error") %> prohibited this make from being saved:</h2>
@@ -11,17 +11,17 @@
     </div>
   <% end %>
 
-  <div class="field">
+  <div class="form-group">
     <%= form.label :name %>
-    <%= form.text_field :name %>
+    <%= form.text_field :name, class: "form-control" %>
   </div>
 
-  <div class="field">
+  <div class="form-group">
     <%= form.label :country %>
-    <%= form.text_field :country %>
+    <%= form.text_field :country, class: "form-control" %>
   </div>
 
   <div class="actions">
-    <%= form.submit %>
+    <%= form.submit class: 'btn btn-primary' %>
   </div>
 <% end %>
diff --git a/app/views/makes/index.html.erb b/app/views/makes/index.html.erb
index 08064d1..5cdcc32 100644
--- a/app/views/makes/index.html.erb
+++ b/app/views/makes/index.html.erb
@@ -1,8 +1,5 @@
-<p id="notice"><%= notice %></p>
-
 <h1>Makes|| <span><%= link_to 'New Make', new_make_path %></span></h1>
 
-
 <div class="top-search-bar">
   <%= form_tag(search_makes_url, method: "get") do %>
     <div class="input-group">
@@ -20,7 +17,10 @@
     <tr>
       <th scope="col">Name</th>
       <th scope="col">Country</th>
-      <th colspan="3"></th>
+      <th colspan="1"></th>
+      <% if user_signed_in? %>
+        <th colspan="2"></th>
+      <% end %>
     </tr>
   </thead>
 
@@ -29,9 +29,11 @@
       <tr>
         <td><%= make.name %></td>
         <td><%= make.country %></td>
-        <td><%= link_to 'Show', make %></td>
-        <td><%= link_to 'Edit', edit_make_path(make) %></td>
-        <td><%= link_to 'Destroy', make, method: :delete, data: { confirm: 'Are you sure?' } %></td>
+        <td><%= link_to 'View', make_path(make) %></td>
+        <% if user_signed_in? %>
+          <td><%= link_to 'Edit', edit_make_path(make) %></td>
+          <td><%= link_to 'Destroy', make, method: :delete, data: { confirm: 'Are you sure?' } %></td>
+        <% end %>
       </tr>
     <% end %>
   </tbody>
diff --git a/app/views/makes/show.html.erb b/app/views/makes/show.html.erb
index f02d66d..eb8704f 100644
--- a/app/views/makes/show.html.erb
+++ b/app/views/makes/show.html.erb
@@ -1,5 +1,3 @@
-<p id="notice"><%= notice %></p>
-
 <p>
   <strong>Name:</strong>
   <%= @make.name %>
diff --git a/app/views/parts/_form.html.erb b/app/views/parts/_form.html.erb
index 6b36465..ef32b39 100644
--- a/app/views/parts/_form.html.erb
+++ b/app/views/parts/_form.html.erb
@@ -11,13 +11,13 @@
     </div>
   <% end %>
 
-  <div class="field">
+  <div class="form-group">
     <%= form.label :name %>
-    <%= form.text_field :name %>
+    <%= form.text_field :name, class: "form-control"  %>
   </div>
 
   <div class="actions">
-    <%= form.submit %>
+    <%= form.submit class: 'btn btn-primary'  %>
   </div>
 
 <!--  <form class="ui large form segment">-->
diff --git a/app/views/parts/index.html.erb b/app/views/parts/index.html.erb
index 6664def..bb97960 100644
--- a/app/views/parts/index.html.erb
+++ b/app/views/parts/index.html.erb
@@ -1,6 +1,5 @@
-<p id="notice"><%= notice %></p>
-
 <h1>Parts|| <span><%= link_to 'New Part', new_part_path %></span></h1>
+
 <div class="top-search-bar">
   <%= form_tag(search_parts_url, method: "get") do %>
     <div class="input-group">
@@ -17,7 +16,10 @@
   <thead>
     <tr>
       <th>Name</th>
-      <th colspan="3"></th>
+      <th colspan="1"></th>
+      <% if user_signed_in? %>
+        <th colspan="2"></th>
+      <% end %>
     </tr>
   </thead>
 
@@ -25,9 +27,11 @@
     <% @parts.each do |part| %>
       <tr>
         <td><%= part.name %></td>
-        <td><%= link_to 'Show', part %></td>
-        <td><%= link_to 'Edit', edit_part_path(part) %></td>
-        <td><%= link_to 'Destroy', part, method: :delete, data: { confirm: 'Are you sure?' } %></td>
+        <td><%= link_to 'View', part_path(part) %></td>
+        <% if user_signed_in? %>
+          <td><%= link_to 'Edit', edit_part_path(part) %></td>
+          <td><%= link_to 'Destroy', part, method: :delete, data: { confirm: 'Are you sure?' } %></td>
+        <% end %>
       </tr>
     <% end %>
   </tbody>
diff --git a/app/views/parts/show.html.erb b/app/views/parts/show.html.erb
index d58da0d..96c89fd 100644
--- a/app/views/parts/show.html.erb
+++ b/app/views/parts/show.html.erb
@@ -1,5 +1,3 @@
-<p id="notice"><%= notice %></p>
-
 <p>
   <strong>Name:</strong>
   <%= @part.name %>
diff --git a/config/environments/development.rb b/config/environments/development.rb
index 1311e3e..9338aee 100644
--- a/config/environments/development.rb
+++ b/config/environments/development.rb
@@ -58,4 +58,7 @@ Rails.application.configure do
   # Use an evented file watcher to asynchronously detect changes in source code,
   # routes, locales, etc. This feature depends on the listen gem.
   config.file_watcher = ActiveSupport::EventedFileUpdateChecker
+
+  # required by devise?
+  config.action_mailer.default_url_options = { host: 'localhost', port: 3000 }
 end
diff --git a/config/initializers/devise.rb b/config/initializers/devise.rb
new file mode 100644
index 0000000..f3d24e5
--- /dev/null
+++ b/config/initializers/devise.rb
@@ -0,0 +1,299 @@
+# frozen_string_literal: true
+
+# Use this hook to configure devise mailer, warden hooks and so forth.
+# Many of these configuration options can be set straight in your model.
+Devise.setup do |config|
+  # The secret key used by Devise. Devise uses this key to generate
+  # random tokens. Changing this key will render invalid all existing
+  # confirmation, reset password and unlock tokens in the database.
+  # Devise will use the `secret_key_base` as its `secret_key`
+  # by default. You can change it below and use your own secret key.
+  # config.secret_key = '68c71c40f5f776f40b88233441eead5fddde36204ccfb403ed1b1cea336962b96dce4519bbebacb796204b4b2251b494b0d881a352b8682d8fe754e751c7c000'
+
+  # ==> Controller configuration
+  # Configure the parent class to the devise controllers.
+  # config.parent_controller = 'DeviseController'
+
+  # ==> Mailer Configuration
+  # Configure the e-mail address which will be shown in Devise::Mailer,
+  # note that it will be overwritten if you use your own mailer class
+  # with default "from" parameter.
+  config.mailer_sender = 'please-change-me-at-config-initializers-devise@example.com'
+
+  # Configure the class responsible to send e-mails.
+  # config.mailer = 'Devise::Mailer'
+
+  # Configure the parent class responsible to send e-mails.
+  # config.parent_mailer = 'ActionMailer::Base'
+
+  # ==> ORM configuration
+  # Load and configure the ORM. Supports :active_record (default) and
+  # :mongoid (bson_ext recommended) by default. Other ORMs may be
+  # available as additional gems.
+  require 'devise/orm/active_record'
+
+  # ==> Configuration for any authentication mechanism
+  # Configure which keys are used when authenticating a user. The default is
+  # just :email. You can configure it to use [:username, :subdomain], so for
+  # authenticating a user, both parameters are required. Remember that those
+  # parameters are used only when authenticating and not when retrieving from
+  # session. If you need permissions, you should implement that in a before filter.
+  # You can also supply a hash where the value is a boolean determining whether
+  # or not authentication should be aborted when the value is not present.
+  # config.authentication_keys = [:email]
+
+  # Configure parameters from the request object used for authentication. Each entry
+  # given should be a request method and it will automatically be passed to the
+  # find_for_authentication method and considered in your model lookup. For instance,
+  # if you set :request_keys to [:subdomain], :subdomain will be used on authentication.
+  # The same considerations mentioned for authentication_keys also apply to request_keys.
+  # config.request_keys = []
+
+  # Configure which authentication keys should be case-insensitive.
+  # These keys will be downcased upon creating or modifying a user and when used
+  # to authenticate or find a user. Default is :email.
+  config.case_insensitive_keys = [:email]
+
+  # Configure which authentication keys should have whitespace stripped.
+  # These keys will have whitespace before and after removed upon creating or
+  # modifying a user and when used to authenticate or find a user. Default is :email.
+  config.strip_whitespace_keys = [:email]
+
+  # Tell if authentication through request.params is enabled. True by default.
+  # It can be set to an array that will enable params authentication only for the
+  # given strategies, for example, `config.params_authenticatable = [:database]` will
+  # enable it only for database (email + password) authentication.
+  # config.params_authenticatable = true
+
+  # Tell if authentication through HTTP Auth is enabled. False by default.
+  # It can be set to an array that will enable http authentication only for the
+  # given strategies, for example, `config.http_authenticatable = [:database]` will
+  # enable it only for database authentication. The supported strategies are:
+  # :database      = Support basic authentication with authentication key + password
+  # config.http_authenticatable = false
+
+  # If 401 status code should be returned for AJAX requests. True by default.
+  # config.http_authenticatable_on_xhr = true
+
+  # The realm used in Http Basic Authentication. 'Application' by default.
+  # config.http_authentication_realm = 'Application'
+
+  # It will change confirmation, password recovery and other workflows
+  # to behave the same regardless if the e-mail provided was right or wrong.
+  # Does not affect registerable.
+  # config.paranoid = true
+
+  # By default Devise will store the user in session. You can skip storage for
+  # particular strategies by setting this option.
+  # Notice that if you are skipping storage for all authentication paths, you
+  # may want to disable generating routes to Devise's sessions controller by
+  # passing skip: :sessions to `devise_for` in your config/routes.rb
+  config.skip_session_storage = [:http_auth]
+
+  # By default, Devise cleans up the CSRF token on authentication to
+  # avoid CSRF token fixation attacks. This means that, when using AJAX
+  # requests for sign in and sign up, you need to get a new CSRF token
+  # from the server. You can disable this option at your own risk.
+  # config.clean_up_csrf_token_on_authentication = true
+
+  # When false, Devise will not attempt to reload routes on eager load.
+  # This can reduce the time taken to boot the app but if your application
+  # requires the Devise mappings to be loaded during boot time the application
+  # won't boot properly.
+  # config.reload_routes = true
+
+  # ==> Configuration for :database_authenticatable
+  # For bcrypt, this is the cost for hashing the password and defaults to 11. If
+  # using other algorithms, it sets how many times you want the password to be hashed.
+  #
+  # Limiting the stretches to just one in testing will increase the performance of
+  # your test suite dramatically. However, it is STRONGLY RECOMMENDED to not use
+  # a value less than 10 in other environments. Note that, for bcrypt (the default
+  # algorithm), the cost increases exponentially with the number of stretches (e.g.
+  # a value of 20 is already extremely slow: approx. 60 seconds for 1 calculation).
+  config.stretches = Rails.env.test? ? 1 : 11
+
+  # Set up a pepper to generate the hashed password.
+  # config.pepper = '01d12323be9f7fb4f6dc5679005bdc62b530b6647180f6bdb3e3fb6c4fee305311f61c0ccc42a41394c58d84f3bb2787040d4607211f5aa9e60b1f716d91c8fd'
+
+  # Send a notification to the original email when the user's email is changed.
+  # config.send_email_changed_notification = false
+
+  # Send a notification email when the user's password is changed.
+  # config.send_password_change_notification = false
+
+  # ==> Configuration for :confirmable
+  # A period that the user is allowed to access the website even without
+  # confirming their account. For instance, if set to 2.days, the user will be
+  # able to access the website for two days without confirming their account,
+  # access will be blocked just in the third day.
+  # You can also set it to nil, which will allow the user to access the website
+  # without confirming their account.
+  # Default is 0.days, meaning the user cannot access the website without
+  # confirming their account.
+  # config.allow_unconfirmed_access_for = 2.days
+
+  # A period that the user is allowed to confirm their account before their
+  # token becomes invalid. For example, if set to 3.days, the user can confirm
+  # their account within 3 days after the mail was sent, but on the fourth day
+  # their account can't be confirmed with the token any more.
+  # Default is nil, meaning there is no restriction on how long a user can take
+  # before confirming their account.
+  # config.confirm_within = 3.days
+
+  # If true, requires any email changes to be confirmed (exactly the same way as
+  # initial account confirmation) to be applied. Requires additional unconfirmed_email
+  # db field (see migrations). Until confirmed, new email is stored in
+  # unconfirmed_email column, and copied to email column on successful confirmation.
+  config.reconfirmable = true
+
+  # Defines which key will be used when confirming an account
+  # config.confirmation_keys = [:email]
+
+  # ==> Configuration for :rememberable
+  # The time the user will be remembered without asking for credentials again.
+  # config.remember_for = 2.weeks
+
+  # Invalidates all the remember me tokens when the user signs out.
+  config.expire_all_remember_me_on_sign_out = true
+
+  # If true, extends the user's remember period when remembered via cookie.
+  # config.extend_remember_period = false
+
+  # Options to be passed to the created cookie. For instance, you can set
+  # secure: true in order to force SSL only cookies.
+  # config.rememberable_options = {}
+
+  # ==> Configuration for :validatable
+  # Range for password length.
+  config.password_length = 6..128
+
+  # Email regex used to validate email formats. It simply asserts that
+  # one (and only one) @ exists in the given string. This is mainly
+  # to give user feedback and not to assert the e-mail validity.
+  config.email_regexp = /\A[^@\s]+@[^@\s]+\z/
+
+  # ==> Configuration for :timeoutable
+  # The time you want to timeout the user session without activity. After this
+  # time the user will be asked for credentials again. Default is 30 minutes.
+  # config.timeout_in = 30.minutes
+
+  # ==> Configuration for :lockable
+  # Defines which strategy will be used to lock an account.
+  # :failed_attempts = Locks an account after a number of failed attempts to sign in.
+  # :none            = No lock strategy. You should handle locking by yourself.
+  # config.lock_strategy = :failed_attempts
+
+  # Defines which key will be used when locking and unlocking an account
+  # config.unlock_keys = [:email]
+
+  # Defines which strategy will be used to unlock an account.
+  # :email = Sends an unlock link to the user email
+  # :time  = Re-enables login after a certain amount of time (see :unlock_in below)
+  # :both  = Enables both strategies
+  # :none  = No unlock strategy. You should handle unlocking by yourself.
+  # config.unlock_strategy = :both
+
+  # Number of authentication tries before locking an account if lock_strategy
+  # is failed attempts.
+  # config.maximum_attempts = 20
+
+  # Time interval to unlock the account if :time is enabled as unlock_strategy.
+  # config.unlock_in = 1.hour
+
+  # Warn on the last attempt before the account is locked.
+  # config.last_attempt_warning = true
+
+  # ==> Configuration for :recoverable
+  #
+  # Defines which key will be used when recovering the password for an account
+  # config.reset_password_keys = [:email]
+
+  # Time interval you can reset your password with a reset password key.
+  # Don't put a too small interval or your users won't have the time to
+  # change their passwords.
+  config.reset_password_within = 6.hours
+
+  # When set to false, does not sign a user in automatically after their password is
+  # reset. Defaults to true, so a user is signed in automatically after a reset.
+  # config.sign_in_after_reset_password = true
+
+  # ==> Configuration for :encryptable
+  # Allow you to use another hashing or encryption algorithm besides bcrypt (default).
+  # You can use :sha1, :sha512 or algorithms from others authentication tools as
+  # :clearance_sha1, :authlogic_sha512 (then you should set stretches above to 20
+  # for default behavior) and :restful_authentication_sha1 (then you should set
+  # stretches to 10, and copy REST_AUTH_SITE_KEY to pepper).
+  #
+  # Require the `devise-encryptable` gem when using anything other than bcrypt
+  # config.encryptor = :sha512
+
+  # ==> Scopes configuration
+  # Turn scoped views on. Before rendering "sessions/new", it will first check for
+  # "users/sessions/new". It's turned off by default because it's slower if you
+  # are using only default views.
+  # config.scoped_views = false
+
+  # Configure the default scope given to Warden. By default it's the first
+  # devise role declared in your routes (usually :user).
+  # config.default_scope = :user
+
+  # Set this configuration to false if you want /users/sign_out to sign out
+  # only the current scope. By default, Devise signs out all scopes.
+  # config.sign_out_all_scopes = true
+
+  # ==> Navigation configuration
+  # Lists the formats that should be treated as navigational. Formats like
+  # :html, should redirect to the sign in page when the user does not have
+  # access, but formats like :xml or :json, should return 401.
+  #
+  # If you have any extra navigational formats, like :iphone or :mobile, you
+  # should add them to the navigational formats lists.
+  #
+  # The "*/*" below is required to match Internet Explorer requests.
+  # config.navigational_formats = ['*/*', :html]
+
+  # The default HTTP method used to sign out a resource. Default is :delete.
+  config.sign_out_via = :delete
+
+  # ==> OmniAuth
+  # Add a new OmniAuth provider. Check the wiki for more information on setting
+  # up on your models and hooks.
+  # config.omniauth :github, 'APP_ID', 'APP_SECRET', scope: 'user,public_repo'
+
+  # ==> Warden configuration
+  # If you want to use other strategies, that are not supported by Devise, or
+  # change the failure app, you can configure them inside the config.warden block.
+  #
+  # config.warden do |manager|
+  #   manager.intercept_401 = false
+  #   manager.default_strategies(scope: :user).unshift :some_external_strategy
+  # end
+
+  # ==> Mountable engine configurations
+  # When using Devise inside an engine, let's call it `MyEngine`, and this engine
+  # is mountable, there are some extra configurations to be taken into account.
+  # The following options are available, assuming the engine is mounted as:
+  #
+  #     mount MyEngine, at: '/my_engine'
+  #
+  # The router that invoked `devise_for`, in the example above, would be:
+  # config.router_name = :my_engine
+  #
+  # When using OmniAuth, Devise cannot automatically set OmniAuth path,
+  # so you need to do it manually. For the users scope, it would be:
+  # config.omniauth_path_prefix = '/my_engine/users/auth'
+
+  # ==> Turbolinks configuration
+  # If your app is using Turbolinks, Turbolinks::Controller needs to be included to make redirection work correctly:
+  #
+  # ActiveSupport.on_load(:devise_failure_app) do
+  #   include Turbolinks::Controller
+  # end
+
+  # ==> Configuration for :registerable
+
+  # When set to false, does not sign a user in automatically after their password is
+  # changed. Defaults to true, so a user is signed in automatically after changing a password.
+  # config.sign_in_after_change_password = true
+end
diff --git a/config/locales/devise.en.yml b/config/locales/devise.en.yml
new file mode 100644
index 0000000..ca3d619
--- /dev/null
+++ b/config/locales/devise.en.yml
@@ -0,0 +1,65 @@
+# Additional translations at https://github.com/plataformatec/devise/wiki/I18n
+
+en:
+  devise:
+    confirmations:
+      confirmed: "Your email address has been successfully confirmed."
+      send_instructions: "You will receive an email with instructions for how to confirm your email address in a few minutes."
+      send_paranoid_instructions: "If your email address exists in our database, you will receive an email with instructions for how to confirm your email address in a few minutes."
+    failure:
+      already_authenticated: "You are already signed in."
+      inactive: "Your account is not activated yet."
+      invalid: "Invalid %{authentication_keys} or password."
+      locked: "Your account is locked."
+      last_attempt: "You have one more attempt before your account is locked."
+      not_found_in_database: "Invalid %{authentication_keys} or password."
+      timeout: "Your session expired. Please sign in again to continue."
+      unauthenticated: "You need to sign in or sign up before continuing."
+      unconfirmed: "You have to confirm your email address before continuing."
+    mailer:
+      confirmation_instructions:
+        subject: "Confirmation instructions"
+      reset_password_instructions:
+        subject: "Reset password instructions"
+      unlock_instructions:
+        subject: "Unlock instructions"
+      email_changed:
+        subject: "Email Changed"
+      password_change:
+        subject: "Password Changed"
+    omniauth_callbacks:
+      failure: "Could not authenticate you from %{kind} because \"%{reason}\"."
+      success: "Successfully authenticated from %{kind} account."
+    passwords:
+      no_token: "You can't access this page without coming from a password reset email. If you do come from a password reset email, please make sure you used the full URL provided."
+      send_instructions: "You will receive an email with instructions on how to reset your password in a few minutes."
+      send_paranoid_instructions: "If your email address exists in our database, you will receive a password recovery link at your email address in a few minutes."
+      updated: "Your password has been changed successfully. You are now signed in."
+      updated_not_active: "Your password has been changed successfully."
+    registrations:
+      destroyed: "Bye! Your account has been successfully cancelled. We hope to see you again soon."
+      signed_up: "Welcome! You have signed up successfully."
+      signed_up_but_inactive: "You have signed up successfully. However, we could not sign you in because your account is not yet activated."
+      signed_up_but_locked: "You have signed up successfully. However, we could not sign you in because your account is locked."
+      signed_up_but_unconfirmed: "A message with a confirmation link has been sent to your email address. Please follow the link to activate your account."
+      update_needs_confirmation: "You updated your account successfully, but we need to verify your new email address. Please check your email and follow the confirmation link to confirm your new email address."
+      updated: "Your account has been updated successfully."
+      updated_but_not_signed_in: "Your account has been updated successfully, but since your password was changed, you need to sign in again"
+    sessions:
+      signed_in: "Signed in successfully."
+      signed_out: "Signed out successfully."
+      already_signed_out: "Signed out successfully."
+    unlocks:
+      send_instructions: "You will receive an email with instructions for how to unlock your account in a few minutes."
+      send_paranoid_instructions: "If your account exists, you will receive an email with instructions for how to unlock it in a few minutes."
+      unlocked: "Your account has been unlocked successfully. Please sign in to continue."
+  errors:
+    messages:
+      already_confirmed: "was already confirmed, please try signing in"
+      confirmation_period_expired: "needs to be confirmed within %{period}, please request a new one"
+      expired: "has expired, please request a new one"
+      not_found: "not found"
+      not_locked: "was not locked"
+      not_saved:
+        one: "1 error prohibited this %{resource} from being saved:"
+        other: "%{count} errors prohibited this %{resource} from being saved:"
diff --git a/config/routes.rb b/config/routes.rb
index a01551c..92c5e43 100644
--- a/config/routes.rb
+++ b/config/routes.rb
@@ -1,8 +1,12 @@
 Rails.application.routes.draw do
+  root 'cars#index'
+
+  devise_for :users
+
   get 'about/creator'
   get 'about/assignments'
   get 'about/resume'
-  root 'cars#index'
+
 
   resources :parts do
     get :autocomplete_part_name, on: :collection
diff --git a/db/migrate/20191023221607_devise_create_users.rb b/db/migrate/20191023221607_devise_create_users.rb
new file mode 100644
index 0000000..f674a59
--- /dev/null
+++ b/db/migrate/20191023221607_devise_create_users.rb
@@ -0,0 +1,44 @@
+# frozen_string_literal: true
+
+class DeviseCreateUsers < ActiveRecord::Migration[5.2]
+  def change
+    create_table :users do |t|
+      ## Database authenticatable
+      t.string :email,              null: false, default: ""
+      t.string :encrypted_password, null: false, default: ""
+
+      ## Recoverable
+      t.string   :reset_password_token
+      t.datetime :reset_password_sent_at
+
+      ## Rememberable
+      t.datetime :remember_created_at
+
+      ## Trackable
+      # t.integer  :sign_in_count, default: 0, null: false
+      # t.datetime :current_sign_in_at
+      # t.datetime :last_sign_in_at
+      # t.string   :current_sign_in_ip
+      # t.string   :last_sign_in_ip
+
+      ## Confirmable
+      # t.string   :confirmation_token
+      # t.datetime :confirmed_at
+      # t.datetime :confirmation_sent_at
+      # t.string   :unconfirmed_email # Only if using reconfirmable
+
+      ## Lockable
+      # t.integer  :failed_attempts, default: 0, null: false # Only if lock strategy is :failed_attempts
+      # t.string   :unlock_token # Only if unlock strategy is :email or :both
+      # t.datetime :locked_at
+
+
+      t.timestamps null: false
+    end
+
+    add_index :users, :email,                unique: true
+    add_index :users, :reset_password_token, unique: true
+    # add_index :users, :confirmation_token,   unique: true
+    # add_index :users, :unlock_token,         unique: true
+  end
+end
diff --git a/db/schema.rb b/db/schema.rb
index 71d98d3..75362b2 100644
--- a/db/schema.rb
+++ b/db/schema.rb
@@ -10,7 +10,7 @@
 #
 # It's strongly recommended that you check this file into your version control system.
 
-ActiveRecord::Schema.define(version: 2019_10_03_215414) do
+ActiveRecord::Schema.define(version: 2019_10_23_221607) do
 
   create_table "cars", force: :cascade do |t|
     t.integer "make_id"
@@ -41,4 +41,16 @@ ActiveRecord::Schema.define(version: 2019_10_03_215414) do
     t.datetime "updated_at", null: false
   end
 
+  create_table "users", force: :cascade do |t|
+    t.string "email", default: "", null: false
+    t.string "encrypted_password", default: "", null: false
+    t.string "reset_password_token"
+    t.datetime "reset_password_sent_at"
+    t.datetime "remember_created_at"
+    t.datetime "created_at", null: false
+    t.datetime "updated_at", null: false
+    t.index ["email"], name: "index_users_on_email", unique: true
+    t.index ["reset_password_token"], name: "index_users_on_reset_password_token", unique: true
+  end
+
 end
diff --git a/db/seeds.rb b/db/seeds.rb
index fb07675..9ded0d1 100644
--- a/db/seeds.rb
+++ b/db/seeds.rb
@@ -18,6 +18,9 @@ require 'set'
 Car.all.each(&:delete)
 Make.all.each(&:delete)
 Part.all.each(&:delete)
+User.all.each(&:delete)
+
+puts 'Deleted past data'
 
 
 # TODO: Update part
@@ -36,6 +39,7 @@ parts.each do |part_name|
   new_part.save!
 end
 
+puts 'Seeded Parts'
 
 
 lookup_lines = File.readlines(Rails.root.join('lib', 'seeds', 'makes.txt'))
@@ -52,8 +56,10 @@ makes = lookup_lines.map do |line|
   make
 end
 
+puts 'Seeded Makes'
+
 unique_make_model = Set.new
-max_part_count = 5
+max_part_count = 10
 part_count = parts.count
 parts = parts.to_a
 cur_vin = 0
@@ -76,4 +82,12 @@ csv.each do |row|
     cur_vin += 1
     unique_make_model << [ row['make'], row['model'] ]
   end
-end
\ No newline at end of file
+end
+
+puts 'Seeded Cars'
+
+user = User.new
+user.email = 'test@test.com'
+user.password = 'test123'
+user.password_confirmation = 'test123'
+user.save!
\ No newline at end of file
diff --git a/lib/seeds/makes.txt b/lib/seeds/makes.txt
index 03e4c97..460602f 100644
--- a/lib/seeds/makes.txt
+++ b/lib/seeds/makes.txt
@@ -1,7 +1,7 @@
 Abarth – Italy
 Acura – Japan
 Alfa Romeo – Italy
-AMC – United State
+AMC – United States
 Aston Martin – United Kingdom
 Audi – Germany
 Austin – United Kingdom
diff --git a/lib/seeds/parts.txt b/lib/seeds/parts.txt
index b392a93..b7e4840 100644
--- a/lib/seeds/parts.txt
+++ b/lib/seeds/parts.txt
@@ -1 +1 @@
-Bonnet/hood,Bonnet/hood latch,Bumper,Unexposed bumper,Exposed bumper,Cowl screen,Decklid,Fascia rear and support,Fender (wing or mudguard),Front clip,Front fascia and header panel,Grille (also called grill),Pillar and hard trim,Quarter panel,Radiator core support,Rocker panel,Roof rack,Spoiler,Front spoiler (air dam),Rear spoiler (wing),Rims,Hubcap,Tire/Tyre,Trim package,Trunk/boot/hatch,Trunk/boot latch,Valance,Welded assembly,Outer door handle,Inner door handle,Door control module,Door seal,Door watershield,Hinge,Door latch,Door lock and power door locks,Center-locking,Fuel tank (or fuel filler) door,Glass,Sunroof,Sunroof motor,Window motor,Window regulator,Windshield (also called windscreen),Windshield washer motor,Window seal,Antenna assembly,Antenna cable,Radio and media player,Other devices,Speaker,Tuner,Subwoofer,Alternator,Alternator bearing,Alternator bracket,Alternator fan,Other alternator parts,Battery,Performance battery,Battery box,Battery cable terminal,Battery cable,Battery control system,Battery plate,Battery tray,Voltage regulator,Ammeter,Clinometer,Dynamometer,Fuel gauge,Hydrometer,Odometer (also called milometer or mileometers),Speedometer,Tachometer (also called rev counters),Temperature gauge,Tire pressure gauge,Vacuum gauge,Voltmeter,Water temperature meter,Coil wire,Distributor,Electronic timing controller,Ignition box,Ignition coil,Ignition coil parts,Ignition magneto,Spark plug,Engine bay lighting,Fog light (also called foglamp),Halogen,Headlight (also called headlamp),Headlight motor,Interior light and lamp,License plate lamp (also called number plate lamp or registration plate lamp),Side lighting,Tail light,Tail light cover,Airbag sensors,Automatic transmission speed sensor,Camshaft position sensor,Coolant temperature sensor,Crankshaft position sensor,Engine sensor,Fuel level sensor,Fuel Pressure sensor,Knock sensor,Light sensor,Oil level sensor,Oil pressure sensor,Mass flow sensor,Starter,Starter drive,Starter motor,Starter solenoid,Glowplug,Battery,Door switch,Ignition switch,Power window switch,Steering column switch,Switch cover,Switch panel,Thermostat,Frame switch,Parts and functions of starter system,Air conditioning harness,Engine compartment harness,Interior harness,Main harness,floor harness,control harness,Air bag control module,Alarm and siren,Central locking system,Chassis control computer,Cruise control computer,Door contact,Engine computer and management system,Engine control unit,Fuse,Fuse box,Ground strap,Grab Handle (aka "Oh S***" Handle),Performance chip,Performance monitor,Relay connector,Remote lock,Shift improver,Speed controller,Speedometer calibrator,Transmission computer,Wiring connector,Dash Panels,Carpet and other floor material,Center console (front and rear),Trap (secret compartment),Arm Rest,Bench seat,Bucket seat,Children and baby car seat,Fastener,Headrest,Seat belt,Seat bracket,Seat cover,Seat track,Other seat components,Anti-lock braking system (ABS),ABS steel pin,Adjusting mechanism (adjuster star wheel),Anchor,Bleed nipple,Brake backing plate,Brake backing pad,Brake cooling duct,Brake disc,Brake drum,Brake line/Cable,Brake pad,Brake pedal,Brake piston,Brake pump,Brake roll,Brake rotor,Brake servo,Brake shoe,Brake lining,Shoe web,Brake warning light,Calibrated friction brake,Caliper,Combination valve,Dual circuit brake system,Hold-down springs (retainer springs),Hose,Brake booster hose,Air brake nylon hose,Brake duct hose,Hydraulic booster unit,Load-sensing valve,Master cylinder,Metering valve,Other braking system parts,Park brake lever/handle (hand brake),Pressure differential valve,Proportioning valve,Reservoir,Shoe return spring,Tyre,Vacuum brake booster,Wheel cylinder (slave cylinder),Wheel stud,Diesel engine, petrol engine (gasoline engine),Accessory belt,Air duct,Air intake housing,Air intake manifold,Camshaft,Camshaft bearing,Camshaft fastener,Camshaft follower,Camshaft locking plate,Camshaft pushrod,Camshaft spacer ring,Connecting rod,Connecting rod bearing,Connecting rod bolt,Connecting rod washer,Crank case,Crank pulley,Crankshaft,Crankshaft oil seal,Cylinder head,Cylinder head cover,Other cylinder head cover parts,Cylinder head gasket,Distributor,Distributor cap,Drive belt,Engine block,Engine block,Engine cradle,Engine shake damper and vibration absorber,Engine valve,Fan belt,Gudgeon pin (wrist pin),Harmonic balancer,Heater,Mounting,Piston,Piston pin and crank pin,Piston pin bush,Piston ring and circlip,Poppet valve,PCV valve (positive crankcase ventilation valve),Pulley part,Rocker arm,Rocker cover,Starter motor,Starter pinion,Starter ring,Turbocharger and supercharger,Tappet,Timing tape,Valve cover,Valve housing,Valve spring,Valve stem seal,Water pump pulley,Air blower,Coolant hose (clamp),Cooling fan,Fan blade,Fan clutch,Radiator,Radiator bolt,Radiator (fan) shroud,Radiator gasket,Radiator pressure cap,Overflow tank,Water neck,Water neck o-ring,Water pipe,Water pump,Water pump gasket,Water tank,Oil filter,Oil gasket,Oil pan,Oil pipe,Oil pump,Oil strainer,Catalytic converter,Exhaust clamp and bracket,Exhaust flange gasket,Exhaust gasket,Exhaust manifold,Exhaust manifold gasket,Exhaust pipe,Heat shield,Heat sleeving and tape,Resonator,Muffler (silencer),Spacer ring,ely,Air filter,Carburetor,Carburetor parts,Choke cable,EGR valve,Fuel cap,Fuel cell,Fuel cell component,Fuel cooler,Fuel distributor,Fuel filter,Fuel filter seal,Fuel injector,Fuel injector nozzle,Fuel pump,Fuel pump gasket,Fuel pressure regulator,Fuel rail,Fuel tank,Fuel tank cover,Fuel water separator,Intake manifold,Intake manifold gasket,LPG (Liquefied petroleum gas) system assembly,Throttle body,Beam axle,Control arm,Constant-velocity axle,Constant-velocity joint,Idler arm,Kingpin,Panhard rod,Pitman arm,Power steering assembly and component,Rack end,Shock absorber,Spindle,Spring,Air spring,Coil spring,Leaf and parabolic leaf spring,Rubber spring,Spiral spring,Stabilizer bars and link,Steering arm,Steering box,Steering column assembly,Steering rack (a form of steering gear; see also rack and pinion and recirculating ball),Steering shaft,Steering wheel (driving wheel),Strut,Stub axle,Suspension link and bolt,Tie bar,Tie rod,Tie rod end,Trailing arm,Adjustable pedal,Axle shaft,Bell housing,Cam belt,Other belts,Carrier assembly,Chain wheel and sprocket,Clutch assembly,Clutch cable,Clutch disk,Clutch fan,Clutch fork,Clutch hose,Clutch lever,Clutch lining,Clutch pedal,Clutch pressure plate,Clutch shoe,Clutch spring,Differential,Differential case,Pinion bearing,Differential clutch,Spider gears,Differential casing,Differential flange,Differential gear,Differential seal,Flywheel,Flywheel ring gear,Gear,Gear coupling,Gear pump,Gear ring,Gear stick (gearstick, gear lever, selection lever, shift stick, gear shifter),Gearbox,Idler gear,Knuckle,Master cylinder,Output shaft,Pinion,Planetary gear set,Prop shaft (drive shaft, propeller shaft),Shift cable,Shift fork,Shift knob,Shift lever,Slave cylinder,Speed reducer,Speedometer gear,Steering gear,Torque converter,Transaxle housing,Transfer case,Transmission gear,Transmission pan,Transmission seal and bonded piston,Transmission spring,Transmission yolk,Universal joint (UJ, cardan joint),A/C clutch,A/C compressor,A/C condenser,A/C hose,A/C kit,A/C relay,A/C valve,A/C expansion valve,A/C low-pressure valve,A/C schrader valve,A/C INNER PLATE,A/C COOLER,A/C Evaporator,Ball joint,Grooved ball bearing,Needle bearing,Roller bearing,Sleeve bearing,Fuel vapour hose,Reinforced hose (high-pressure hose),Non-reinforced hose,Washer hose,Adhesive tape and foil,Air bag,Bolt cap,Bracket (aluminium, iron, and magnesium bracket),License plate bracket,Cables,Speedometer cable,Cotter pin,Decal,Dashboard,Center console,Glove compartment,Drag link,Dynamic seal,Fastener,Gasket: Flat, moulded, profiled,Hood and trunk release cable,Horn and trumpet horn,Injection-molded parts,Instrument cluster,Label,Mirror,Mount and mounting,Name plate,Nut,Flange nut,Hex nut,O-ring,Paint,Rivet,Rubber (extruded and molded),Screw,Shim,Sun visor,Washer
\ No newline at end of file
+Bonnet/hood,Bonnet/hood latch,Bumper,Unexposed bumper,Exposed bumper,Cowl screen,Decklid,Fascia rear and support,Fender (wing or mudguard),Front clip,Front fascia and header panel,Grille (also called grill),Pillar and hard trim,Quarter panel,Radiator core support,Rocker panel,Roof rack,Spoiler,Front spoiler (air dam),Rear spoiler (wing),Rims,Hubcap,Tire/Tyre,Trim package,Trunk/boot/hatch,Trunk/boot latch,Valance,Welded assembly,Outer door handle,Inner door handle,Door control module,Door seal,Door watershield,Hinge,Door latch,Door lock and power door locks,Center-locking,Fuel tank (or fuel filler) door,Glass,Sunroof,Sunroof motor,Window motor,Window regulator,Windshield (also called windscreen),Windshield washer motor,Window seal,Antenna assembly,Antenna cable,Radio and media player,Other devices,Speaker,Tuner,Subwoofer,Alternator,Alternator bearing,Alternator bracket,Alternator fan,Other alternator parts,Battery,Performance battery,Battery box,Battery cable terminal,Battery cable,Battery control system,Battery plate,Battery tray,Voltage regulator,Ammeter,Clinometer,Dynamometer,Fuel gauge,Hydrometer,Odometer (also called milometer or mileometers),Speedometer,Tachometer (also called rev counters),Temperature gauge,Tire pressure gauge,Vacuum gauge,Voltmeter,Water temperature meter,Coil wire,Distributor,Electronic timing controller,Ignition box,Ignition coil,Ignition coil parts,Ignition magneto,Spark plug,Engine bay lighting,Fog light (also called foglamp),Halogen,Headlight (also called headlamp),Headlight motor,Interior light and lamp,License plate lamp (also called number plate lamp or registration plate lamp),Side lighting,Tail light,Tail light cover,Airbag sensors,Automatic transmission speed sensor,Camshaft position sensor,Coolant temperature sensor,Crankshaft position sensor,Engine sensor,Fuel level sensor,Fuel Pressure sensor,Knock sensor,Light sensor,Oil level sensor,Oil pressure sensor,Mass flow sensor,Starter,Starter drive,Starter motor,Starter solenoid,Glowplug,Battery,Door switch,Ignition switch,Power window switch,Steering column switch,Switch cover,Switch panel,Thermostat,Frame switch,Parts and functions of starter system,Air conditioning harness,Engine compartment harness,Interior harness,Main harness,Floor harness,Control harness,Air bag control module,Alarm and siren,Central locking system,Chassis control computer,Cruise control computer,Door contact,Engine computer and management system,Engine control unit,Fuse,Fuse box,Ground strap,Grab Handle (aka "Oh S***" Handle),Performance chip,Performance monitor,Relay connector,Remote lock,Shift improver,Speed controller,Speedometer calibrator,Transmission computer,Wiring connector,Dash Panels,Carpet and other floor material,Center console (front and rear),Trap (secret compartment),Arm Rest,Bench seat,Bucket seat,Children and baby car seat,Fastener,Headrest,Seat belt,Seat bracket,Seat cover,Seat track,Other seat components,Anti-lock braking system (ABS),ABS steel pin,Adjusting mechanism (adjuster star wheel),Anchor,Bleed nipple,Brake backing plate,Brake backing pad,Brake cooling duct,Brake disc,Brake drum,Brake line/Cable,Brake pad,Brake pedal,Brake piston,Brake pump,Brake roll,Brake rotor,Brake servo,Brake shoe,Brake lining,Shoe web,Brake warning light,Calibrated friction brake,Caliper,Combination valve,Dual circuit brake system,Hold-down springs (retainer springs),Hose,Brake booster hose,Air brake nylon hose,Brake duct hose,Hydraulic booster unit,Load-sensing valve,Master cylinder,Metering valve,Other braking system parts,Park brake lever/handle (hand brake),Pressure differential valve,Proportioning valve,Reservoir,Shoe return spring,Tyre,Vacuum brake booster,Wheel cylinder (slave cylinder),Wheel stud,Diesel engine, petrol engine (gasoline engine),Accessory belt,Air duct,Air intake housing,Air intake manifold,Camshaft,Camshaft bearing,Camshaft fastener,Camshaft follower,Camshaft locking plate,Camshaft pushrod,Camshaft spacer ring,Connecting rod,Connecting rod bearing,Connecting rod bolt,Connecting rod washer,Crank case,Crank pulley,Crankshaft,Crankshaft oil seal,Cylinder head,Cylinder head cover,Other cylinder head cover parts,Cylinder head gasket,Distributor,Distributor cap,Drive belt,Engine block,Engine block,Engine cradle,Engine shake damper and vibration absorber,Engine valve,Fan belt,Gudgeon pin (wrist pin),Harmonic balancer,Heater,Mounting,Piston,Piston pin and crank pin,Piston pin bush,Piston ring and circlip,Poppet valve,PCV valve (positive crankcase ventilation valve),Pulley part,Rocker arm,Rocker cover,Starter motor,Starter pinion,Starter ring,Turbocharger and supercharger,Tappet,Timing tape,Valve cover,Valve housing,Valve spring,Valve stem seal,Water pump pulley,Air blower,Coolant hose (clamp),Cooling fan,Fan blade,Fan clutch,Radiator,Radiator bolt,Radiator (fan) shroud,Radiator gasket,Radiator pressure cap,Overflow tank,Water neck,Water neck o-ring,Water pipe,Water pump,Water pump gasket,Water tank,Oil filter,Oil gasket,Oil pan,Oil pipe,Oil pump,Oil strainer,Catalytic converter,Exhaust clamp and bracket,Exhaust flange gasket,Exhaust gasket,Exhaust manifold,Exhaust manifold gasket,Exhaust pipe,Heat shield,Heat sleeving and tape,Resonator,Muffler (silencer),Spacer ring,Ely,Air filter,Carburetor,Carburetor parts,Choke cable,EGR valve,Fuel cap,Fuel cell,Fuel cell component,Fuel cooler,Fuel distributor,Fuel filter,Fuel filter seal,Fuel injector,Fuel injector nozzle,Fuel pump,Fuel pump gasket,Fuel pressure regulator,Fuel rail,Fuel tank,Fuel tank cover,Fuel water separator,Intake manifold,Intake manifold gasket,LPG (Liquefied petroleum gas) system assembly,Throttle body,Beam axle,Control arm,Constant-velocity axle,Constant-velocity joint,Idler arm,Kingpin,Panhard rod,Pitman arm,Power steering assembly and component,Rack end,Shock absorber,Spindle,Spring,Air spring,Coil spring,Leaf and parabolic leaf spring,Rubber spring,Spiral spring,Stabilizer bars and link,Steering arm,Steering box,Steering column assembly,Steering rack (a form of steering gear; see also rack and pinion and recirculating ball),Steering shaft,Steering wheel (driving wheel),Strut,Stub axle,Suspension link and bolt,Tie bar,Tie rod,Tie rod end,Trailing arm,Adjustable pedal,Axle shaft,Bell housing,Cam belt,Other belts,Carrier assembly,Chain wheel and sprocket,Clutch assembly,Clutch cable,Clutch disk,Clutch fan,Clutch fork,Clutch hose,Clutch lever,Clutch lining,Clutch pedal,Clutch pressure plate,Clutch shoe,Clutch spring,Differential,Differential case,Pinion bearing,Differential clutch,Spider gears,Differential casing,Differential flange,Differential gear,Differential seal,Flywheel,Flywheel ring gear,Gear,Gear coupling,Gear pump,Gear ring,Gear stick (gearstick, gear lever, selection lever, shift stick, gear shifter),Gearbox,Idler gear,Knuckle,Master cylinder,Output shaft,Pinion,Planetary gear set,Prop shaft (drive shaft, propeller shaft),Shift cable,Shift fork,Shift knob,Shift lever,Slave cylinder,Speed reducer,Speedometer gear,Steering gear,Torque converter,Transaxle housing,Transfer case,Transmission gear,Transmission pan,Transmission seal and bonded piston,Transmission spring,Transmission yolk,Universal joint (UJ, cardan joint),A/C clutch,A/C compressor,A/C condenser,A/C hose,A/C kit,A/C relay,A/C valve,A/C expansion valve,A/C low-pressure valve,A/C schrader valve,A/C INNER PLATE,A/C COOLER,A/C Evaporator,Ball joint,Grooved ball bearing,Needle bearing,Roller bearing,Sleeve bearing,Fuel vapour hose,Reinforced hose (high-pressure hose),Non-reinforced hose,Washer hose,Adhesive tape and foil,Air bag,Bolt cap,Bracket (aluminium, iron, and magnesium bracket),License plate bracket,Cables,Speedometer cable,Cotter pin,Decal,Dashboard,Center console,Glove compartment,Drag link,Dynamic seal,Fastener,Gasket: Flat, moulded, profiled,Hood and trunk release cable,Horn and trumpet horn,Injection-molded parts,Instrument cluster,Label,Mirror,Mount and mounting,Name plate,Nut,Flange nut,Hex nut,O-ring,Paint,Rivet,Rubber (extruded and molded),Screw,Shim,Sun visor,Washer
\ No newline at end of file
diff --git a/test/application_system_test_case.rb b/test/application_system_test_case.rb
index d19212a..a894bf0 100644
--- a/test/application_system_test_case.rb
+++ b/test/application_system_test_case.rb
@@ -2,4 +2,12 @@ require "test_helper"
 
 class ApplicationSystemTestCase < ActionDispatch::SystemTestCase
   driven_by :selenium, using: :chrome, screen_size: [1400, 1400]
+
+  def sign_in
+    visit cars_url
+    click_button 'Sign In'
+    fill_in "Email", with: 'test@test.com'
+    fill_in 'Password', with: 'test123'
+    click_button 'Log In'
+  end
 end
diff --git a/test/controllers/about_controller_test.rb b/test/controllers/about_controller_test.rb
index 05ab305..98ec9fc 100644
--- a/test/controllers/about_controller_test.rb
+++ b/test/controllers/about_controller_test.rb
@@ -1,6 +1,12 @@
 require 'test_helper'
 
 class AboutControllerTest < ActionDispatch::IntegrationTest
+  include Devise::Test::IntegrationHelpers
+
+  setup do
+    sign_in users(:one)
+  end
+
   test "should get creator" do
     get about_creator_url
     assert_response :success
diff --git a/test/controllers/authn_test.rb b/test/controllers/authn_test.rb
new file mode 100644
index 0000000..a59dff4
--- /dev/null
+++ b/test/controllers/authn_test.rb
@@ -0,0 +1,120 @@
+require 'test_helper'
+
+module AuthnTests
+  class CarAuthnTest < ActionDispatch::IntegrationTest
+    include Devise::Test::IntegrationHelpers
+
+    setup do
+      @car = cars(:my_car)
+      assert_signed_out
+    end
+
+    test "should load the index when the user isn't signed in" do
+      get cars_url
+      assert_response :success
+    end
+
+    test "should refuse editing when the user isn't signed in" do
+      get edit_car_url(@car)
+      assert_redirected_to new_user_session_url
+
+      assert_no_difference('Car.count') do
+        post cars_url, params: { car: { make_id: @car.make_id, model: @car.model, vin: 10 } }
+        assert_redirected_to new_user_session_url
+      end
+    end
+
+    test "shouldn't destroy car when not signed in" do
+      assert_no_difference('Car.count') do
+        delete car_url(@car)
+        assert_redirected_to new_user_session_url
+      end
+    end
+
+    test "shouldn't create car when not signed in" do
+      assert_no_difference('Car.count') do
+        post cars_url, params: { car: { make_id: @car.make_id, model: @car.model, vin: 10 } }
+      end
+
+      assert_redirected_to new_user_session_url
+    end
+  end
+
+  class PartAuthnTest < ActionDispatch::IntegrationTest
+    include Devise::Test::IntegrationHelpers
+
+    setup do
+      @part = parts(:wheel)
+      assert_signed_out
+    end
+
+    test "should load the index when the user isn't signed in" do
+      get parts_url
+      assert_response :success
+    end
+
+    test "should refuse editing when the user isn't signed in" do
+      get edit_part_url(@part)
+      assert_redirected_to new_user_session_url
+
+      assert_no_difference('Part.count') do
+        post cars_url, params: { part: {name: "new name"} }
+        assert_redirected_to new_user_session_url
+      end
+    end
+
+    test "shouldn't destroy part when not signed in" do
+      assert_no_difference('Part.count') do
+        delete part_url(@part)
+        assert_redirected_to new_user_session_url
+      end
+    end
+
+    test "shouldn't create part when not signed in" do
+      assert_no_difference('Part.count') do
+        post cars_url, params: { part: {name: "new name"} }
+      end
+
+      assert_redirected_to new_user_session_url
+    end
+  end
+
+  class MakeAuthnTest < ActionDispatch::IntegrationTest
+    include Devise::Test::IntegrationHelpers
+
+    setup do
+      @make = makes(:audi)
+      assert_signed_out
+    end
+
+    test "should load the index when the user isn't signed in" do
+      get makes_url
+      assert_response :success
+    end
+
+    test "should refuse editing when the user isn't signed in" do
+      get edit_make_url(@make)
+      assert_redirected_to new_user_session_url
+
+      assert_no_difference('Make.count') do
+        post cars_url, params: { make: {name: "new name", country: "new country"} }
+        assert_redirected_to new_user_session_url
+      end
+    end
+
+    test "shouldn't destroy make when not signed in" do
+      assert_no_difference('Make.count') do
+        delete make_url(@make)
+        assert_redirected_to new_user_session_url
+      end
+    end
+
+    test "shouldn't create make when not signed in" do
+      assert_no_difference('Make.count') do
+        post cars_url, params: { make: {name: "new name", country: "new country"} }
+      end
+
+      assert_redirected_to new_user_session_url
+    end
+  end
+end
\ No newline at end of file
diff --git a/test/controllers/cars_controller_test.rb b/test/controllers/cars_controller_test.rb
index 858db58..cb71fd7 100644
--- a/test/controllers/cars_controller_test.rb
+++ b/test/controllers/cars_controller_test.rb
@@ -1,8 +1,11 @@
 require 'test_helper'
 
 class CarsControllerTest < ActionDispatch::IntegrationTest
+  include Devise::Test::IntegrationHelpers
+
   setup do
     @car = cars(:my_car)
+    sign_in users(:one)
   end
 
   # Custom Tests
diff --git a/test/controllers/makes_controller_test.rb b/test/controllers/makes_controller_test.rb
index 3a66c16..9d497a4 100644
--- a/test/controllers/makes_controller_test.rb
+++ b/test/controllers/makes_controller_test.rb
@@ -1,8 +1,11 @@
 require 'test_helper'
 
 class MakesControllerTest < ActionDispatch::IntegrationTest
+  include Devise::Test::IntegrationHelpers
+
   setup do
     @make = makes(:audi)
+    sign_in users(:one)
   end
 
   test "should find a make that exists" do
diff --git a/test/controllers/parts_controller_test.rb b/test/controllers/parts_controller_test.rb
index d12750f..2cbc0b0 100644
--- a/test/controllers/parts_controller_test.rb
+++ b/test/controllers/parts_controller_test.rb
@@ -1,8 +1,11 @@
 require 'test_helper'
 
 class PartsControllerTest < ActionDispatch::IntegrationTest
+  include Devise::Test::IntegrationHelpers
+
   setup do
     @part = parts(:wheel)
+    sign_in users(:one)
   end
 
   test "should find a part that exists" do
diff --git a/test/fixtures/users.yml b/test/fixtures/users.yml
new file mode 100644
index 0000000..fb0b535
--- /dev/null
+++ b/test/fixtures/users.yml
@@ -0,0 +1,9 @@
+# Read about fixtures at http://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html
+
+# This model initially had no columns defined. If you add columns to the
+# model remove the '{}' from the fixture names and add the columns immediately
+# below each fixture, per the syntax in the comments below
+#
+one:
+  email: test@test.com
+  encrypted_password: admin
diff --git a/test/models/user_test.rb b/test/models/user_test.rb
new file mode 100644
index 0000000..82f61e0
--- /dev/null
+++ b/test/models/user_test.rb
@@ -0,0 +1,7 @@
+require 'test_helper'
+
+class UserTest < ActiveSupport::TestCase
+  # test "the truth" do
+  #   assert true
+  # end
+end
diff --git a/test/system/cars_test.rb b/test/system/cars_test.rb
index 2c1e3f4..07a7634 100644
--- a/test/system/cars_test.rb
+++ b/test/system/cars_test.rb
@@ -1,10 +1,17 @@
 require "application_system_test_case"
 
 class CarsTest < ApplicationSystemTestCase
+  include Warden::Test::Helpers
+
   setup do
-    @car = cars(:one)
+    @car = cars(:my_car)
+    user = users(:one)
+    login_as(user, :scope => :user)
   end
 
+
+  # Scaffold Tests
+
   test "visiting the index" do
     visit cars_url
     assert_selector "h1", text: "Cars"
@@ -14,9 +21,9 @@ class CarsTest < ApplicationSystemTestCase
     visit cars_url
     click_on "New Car"
 
-    fill_in "Make", with: @car.make_id
     fill_in "Model", with: @car.model
-    fill_in "Vin", with: @car.vin
+    fill_in "Vin", with: 1000
+    select 'Audi', from: 'Make'
     click_on "Create Car"
 
     assert_text "Car was successfully created"
@@ -27,7 +34,7 @@ class CarsTest < ApplicationSystemTestCase
     visit cars_url
     click_on "Edit", match: :first
 
-    fill_in "Make", with: @car.make_id
+    select 'Audi', from: 'Make'
     fill_in "Model", with: @car.model
     fill_in "Vin", with: @car.vin
     click_on "Update Car"
diff --git a/test/system/makes_test.rb b/test/system/makes_test.rb
index 5751726..e3d6522 100644
--- a/test/system/makes_test.rb
+++ b/test/system/makes_test.rb
@@ -1,10 +1,15 @@
 require "application_system_test_case"
 
 class MakesTest < ApplicationSystemTestCase
+  include Warden::Test::Helpers
+
   setup do
-    @make = makes(:one)
+    @make = makes(:audi)
+    login_as(users(:one), :scope => :user)
   end
 
+  # Scaffold Tests
+
   test "visiting the index" do
     visit makes_url
     assert_selector "h1", text: "Makes"
@@ -15,7 +20,7 @@ class MakesTest < ApplicationSystemTestCase
     click_on "New Make"
 
     fill_in "Country", with: @make.country
-    fill_in "Name", with: @make.name
+    fill_in "Name", with: "new make"
     click_on "Create Make"
 
     assert_text "Make was successfully created"
diff --git a/test/system/nav_test.rb b/test/system/nav_test.rb
new file mode 100644
index 0000000..acc6830
--- /dev/null
+++ b/test/system/nav_test.rb
@@ -0,0 +1,32 @@
+require "application_system_test_case"
+
+class NavBarTest < ApplicationSystemTestCase
+  include Warden::Test::Helpers
+
+  setup do
+    login_as(users(:one), :scope => :user)
+  end
+
+  test 'active left link should change based on active link' do
+    visit root_url
+    assert_selector 'li.active', text: "Cars"
+
+    visit cars_url
+    assert_selector 'li.active', text: "Cars"
+
+    visit makes_url
+    assert_selector 'li.active', text: "Makes"
+
+    visit parts_url
+    assert_selector 'li.active', text: "Parts"
+  end
+
+  test 'active right link should change based on active link' do
+    visit about_assignments_path
+    assert_selector 'button.btn-primary', text: 'Assignments'
+
+    visit about_creator_path
+    assert_selector 'button.btn-primary', text: 'About Me'
+  end
+
+end
\ No newline at end of file
diff --git a/test/system/parts_test.rb b/test/system/parts_test.rb
index 7bdf358..86ae0aa 100644
--- a/test/system/parts_test.rb
+++ b/test/system/parts_test.rb
@@ -1,10 +1,15 @@
 require "application_system_test_case"
 
 class PartsTest < ApplicationSystemTestCase
+  include Warden::Test::Helpers
+
   setup do
-    @part = parts(:one)
+    @part = parts(:wheel)
+    login_as(users(:one), :scope => :user)
   end
 
+  # Scaffold Tests
+
   test "visiting the index" do
     visit parts_url
     assert_selector "h1", text: "Parts"
diff --git a/test/test_helper.rb b/test/test_helper.rb
index 3ab84e3..ec2b05f 100644
--- a/test/test_helper.rb
+++ b/test/test_helper.rb
@@ -6,5 +6,19 @@ class ActiveSupport::TestCase
   # Setup all fixtures in test/fixtures/*.yml for all tests in alphabetical order.
   fixtures :all
 
+  def assert_signed_out
+    get cars_url
+    assert_select "a:match('href', ?)", new_user_session_url
+    assert_select "a:match('href', ?)", new_user_registration_url
+    assert_select "a:match('href', ?)", destroy_user_session_path, false
+  end
+
+  def assert_signed_in
+    get cars_url
+    assert_select "a:match('href', ?)", new_user_session_url, false
+    assert_select "a:match('href', ?)", new_user_registration_url, false
+    assert_select "a:match('href', ?)", destroy_user_session_path
+  end
+
   # Add more helper methods to be used by all tests here...
 end
